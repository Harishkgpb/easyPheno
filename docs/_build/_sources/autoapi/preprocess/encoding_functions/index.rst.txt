:py:mod:`preprocess.encoding_functions`
=======================================

.. py:module:: preprocess.encoding_functions


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   preprocess.encoding_functions.get_encoding
   preprocess.encoding_functions.get_list_of_encodings
   preprocess.encoding_functions.get_base_encoding
   preprocess.encoding_functions.check_encoding_of_genotype
   preprocess.encoding_functions.encode_genotype
   preprocess.encoding_functions.get_additive_encoding
   preprocess.encoding_functions.get_onehot_encoding



.. py:function:: get_encoding(models, user_encoding)

   Get a list of all required encodings.
   :param models: models to consider
   :param user_encoding: encoding specified by the user
   :return: list of encodings


.. py:function:: get_list_of_encodings()

   Get a list of all implemented encodings.
   ! Adapt if new encoding is added !
   :return: List of all possible encodings


.. py:function:: get_base_encoding(encoding)

   Check which base encoding is needed to create required encoding.
   ! Adapt if new encoding is added
   :param encoding: required encoding
   :return: base encoding


.. py:function:: check_encoding_of_genotype(X)

   Check the encoding of the genotype matrix
   ! Adapt if new encoding is added
   :param X: genotype matrix
   :return: encoding of the genotype matrix


.. py:function:: encode_genotype(X, required_encoding)

   Compute the required encoding of the genotype matrix
   ! Adapt if new encoding is added
   :param X: genotype matrix
   :param required_encoding: encoding of genotype matrix to create
   :return: X in new encoding


.. py:function:: get_additive_encoding(X)

   Generate genotype matrix in additive encoding:
       0: homozygous major allele,
       1: heterozygous
       2: homozygous minor allele
   :param X: genotype matrix in raw encoding, i.e. containing the alleles
   :return: genotype matrix in additive encoding (X_012)


.. py:function:: get_onehot_encoding(X)

   Generate genotype matrix in onehot encoding. If genotype matrix is homozygous, create 3d torch tensor with
   (samples, SNPs, 4), with 4 as the onehot encoding
   A : [1,0,0,0]
   C : [0,1,0,0]
   G : [0,0,1,0]
   T : [0,0,0,1]
   If genotype matrix is heterozygous, create 3d torch tensor with (samples, SNPs, 10), with 10 as the onehot encoding
   A : [1,0,0,0,0,0,0,0,0,0]
   C : [0,1,0,0,0,0,0,0,0,0]
   G : [0,0,1,0,0,0,0,0,0,0]
   K : [0,0,0,1,0,0,0,0,0,0]
   M : [0,0,0,0,1,0,0,0,0,0]
   R : [0,0,0,0,0,1,0,0,0,0]
   S : [0,0,0,0,0,0,1,0,0,0]
   T : [0,0,0,0,0,0,0,1,0,0]
   W : [0,0,0,0,0,0,0,0,1,0]
   Y : [0,0,0,0,0,0,0,0,0,1]
   :param X: genotype matrix in raw encoding, i.e. containing the alleles
   :return: genotype matrix in onehot encoding (X_onehot)


