:py:mod:`preprocess.base_dataset`
=================================

.. py:module:: preprocess.base_dataset


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   preprocess.base_dataset.Dataset




.. py:class:: Dataset(data_dir, genotype_matrix_name, phenotype_matrix_name, phenotype, datasplit, n_outerfolds, n_innerfolds, test_set_size_percentage, val_set_size_percentage, encoding, maf_percentage)

   Class containing dataset ready for optimization (e.g. geno/phenotype matched).

   ## Attributes ##
       encoding: str : the encoding to use (standard encoding or user-defined)
       X_full : np.ndarray : all (matched, maf- and duplicated-filtered) SNPs
       y_full: np.ndarray : all target values
       sample_ids_full : np.ndarray : all sample ids
       datasplit : str : datasplit to use
       datasplit_indices : dict : dictionary containing all indices for the specified datasplit

   .. py:method:: load_match_raw_data(self, data_dir, genotype_matrix_name)

      Load the full genotype and phenotype matrices specified and match them
      :param data_dir: data directory where the phenotype and genotype matrix are stored
      :param genotype_matrix_name: name of the genotype matrix including datatype ending
      :return: matched genotype, phenotype and sample ids


   .. py:method:: maf_filter_raw_data(self, data_dir, maf_percentage)

      Apply maf filter to full raw data, if maf=0 only non-informative SNPs will be removed
      :param data_dir: data directory where the phenotype and genotype matrix are stored
      :param maf_percentage: threshold for MAF filter as percentage value


   .. py:method:: filter_duplicate_snps(self)

      Function to remove duplicate SNPs,
      i.e. SNPs that are completely the same for all samples and therefore do not add information.


   .. py:method:: load_datasplit_indices(self, data_dir, n_outerfolds, n_innerfolds, test_set_size_percentage, val_set_size_percentage)

      Load the datasplit indices saved during file unification.
      Structure: {
                  'outerfold_0':
                      {
                      'innerfold_0': {'train': indices_train, 'val': indices_val},
                      'innerfold_1': {'train': indices_train, 'val': indices_val},
                      ...
                      'innerfold_n': {'train': indices_train, 'val': indices_val},
                      'test': test_indices
                      },
                  ...
                  'outerfold_m':
                       {
                      'innerfold_0': {'train': indices_train, 'val': indices_val},
                      'innerfold_1': {'train': indices_train, 'val': indices_val},
                      ...
                      'innerfold_n': {'train': indices_train, 'val': indices_val},
                      'test': test_indices
                      }
                  }
      Caution: The actual structure depends on the datasplit specified by the user,
      e.g. for a train-val-test split only 'outerfold_0' and its subelements 'innerfold_0' and 'test' exist.
      :param data_dir: data directory where the phenotype and genotype matrix are stored
      :param n_outerfolds: number of outerfolds relevant for nested-cv
      :param n_innerfolds: number of folds relevant for nested-cv and cv-test
      :param test_set_size_percentage: size of the test set relevant for cv-test and train-val-test
      :param val_set_size_percentage: size of the validation set relevant for train-val-test
      :return: dictionary with the above-described structure containing all indices for the specified data split


   .. py:method:: get_index_file_name(genotype_matrix_name, phenotype_matrix_name, phenotype)
      :staticmethod:

      Get the name of the file containing the indices for maf filters and data splits
      :param genotype_matrix_name: name of the genotype matrix including datatype ending
      :param phenotype_matrix_name: name of the phenotype matrix including datatype ending
      :param phenotype: name of the phenotype to predict
      :return: name of index file



